{"ast":null,"code":"import _toConsumableArray from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Famille/Code-lab/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    _this.updateMovie = function (movies, movieNew) {\n      console.log(\"movies\", movies);\n      var title = movieNew.title,\n          genre = movieNew.genre,\n          stock = movieNew.stock,\n          rate = movieNew.rate;\n      var movie = movies.find(function (m) {\n        return m._id === movieNew._id;\n      });\n      console.log(\"movie found\", movie, movieNew);\n      var index = movies.indexOf(movie);\n      movies[index].title = title;\n      movies[index].genre.name = genre;\n      movies[index].dailyRentalRate = rate;\n      movies[index].numberInStock = stock;\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.addMovie = function (movies, movieNew) {\n      console.log(\"add movie\", movieNew);\n      var title = movieNew.title,\n          genre = movieNew.genre,\n          stock = movieNew.stock,\n          rate = movieNew.rate,\n          _id = movieNew._id;\n      var movie = {\n        liked: 0,\n        genre: _this.state.genres.find(function (g) {\n          return g.name === genre;\n        }),\n        _id: _id,\n        title: title,\n        dailyRentalRate: rate,\n        numberInStock: stock\n      };\n      movies = _objectSpread({\n        movie: movie\n      }, movies);\n      console.log(\"movies\", movies);\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handleDelete = function (movie) {\n      var movies = _this.state.movies.filter(function (m) {\n        return m._id !== movie._id;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handleLiked = function (movie) {\n      var movies = _toConsumableArray(_this.state.movies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movie);\n      movies[index].liked = !movies[index].liked;\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.getPagedData = function () {\n      var _this$state = _this.state,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          allMovies = _this$state.movies,\n          selectedGenre = _this$state.selectedGenre,\n          sortColumn = _this$state.sortColumn;\n      var filtered = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      }) : allMovies;\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        _id: \"\",\n        name: \"All Genre\"\n      }].concat(_toConsumableArray(getGenres()));\n      var movies = getMovies();\n      var locState = this.props.location.state;\n      console.log(\"movie\", locState);\n\n      if (locState) {\n        var movie = locState.movie;\n        console.log(\"movie id\", movie._id);\n        if (movie._id === \"new\") this.addMovie(movies, movie);else {\n          this.updateMovie(movies, movie);\n        }\n      } else this.setState({\n        movies: movies\n      });\n\n      this.setState({\n        genres: genres,\n        selectedGenre: genres[0]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.movies.length;\n      var _this$state2 = this.state,\n          pageSize = _this$state2.pageSize,\n          currentPage = _this$state2.currentPage,\n          genres = _this$state2.genres,\n          selectedGenre = _this$state2.selectedGenre,\n          sortColumn = _this$state2.sortColumn;\n      if (!count) return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"No movie in database\");\n\n      var _this$getPagedData = this.getPagedData(),\n          totalCount = _this$getPagedData.totalCount,\n          movies = _this$getPagedData.data;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: genres,\n        selectedItem: selectedGenre,\n        onItemSelect: this.handleGenreSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Showing \", totalCount, \" movies in the database\"), React.createElement(\"main\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(MoviesTable, {\n        onDelete: this.handleDelete,\n        onLiked: this.handleLiked,\n        onSort: this.handleSort,\n        sortColumn: sortColumn,\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/Famille/Code-lab/vidly/src/components/movies.jsx"],"names":["React","Component","MoviesTable","getMovies","Pagination","paginate","ListGroup","getGenres","_","Movies","state","movies","genres","pageSize","currentPage","sortColumn","path","order","updateMovie","movieNew","console","log","title","genre","stock","rate","movie","find","m","_id","index","indexOf","name","dailyRentalRate","numberInStock","setState","addMovie","liked","g","handleDelete","filter","handleLiked","handlePageChange","page","handleGenreSelect","selectedGenre","handleSort","getPagedData","allMovies","filtered","sorted","orderBy","totalCount","length","data","locState","props","location","count"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB;AALN,K;;UAwBRC,W,GAAc,UAACP,MAAD,EAASQ,QAAT,EAAsB;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,MAAtB;AADkC,UAE1BW,KAF0B,GAEIH,QAFJ,CAE1BG,KAF0B;AAAA,UAEnBC,KAFmB,GAEIJ,QAFJ,CAEnBI,KAFmB;AAAA,UAEZC,KAFY,GAEIL,QAFJ,CAEZK,KAFY;AAAA,UAELC,IAFK,GAEIN,QAFJ,CAELM,IAFK;AAGlC,UAAMC,KAAK,GAAGf,MAAM,CAACgB,IAAP,CAAY,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,KAAUV,QAAQ,CAACU,GAAvB;AAAA,OAAb,CAAd;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,KAA3B,EAAkCP,QAAlC;AACA,UAAMW,KAAK,GAAGnB,MAAM,CAACoB,OAAP,CAAeL,KAAf,CAAd;AACAf,MAAAA,MAAM,CAACmB,KAAD,CAAN,CAAcR,KAAd,GAAsBA,KAAtB;AACAX,MAAAA,MAAM,CAACmB,KAAD,CAAN,CAAcP,KAAd,CAAoBS,IAApB,GAA2BT,KAA3B;AACAZ,MAAAA,MAAM,CAACmB,KAAD,CAAN,CAAcG,eAAd,GAAgCR,IAAhC;AACAd,MAAAA,MAAM,CAACmB,KAAD,CAAN,CAAcI,aAAd,GAA8BV,KAA9B;;AACA,YAAKW,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAEDyB,Q,GAAW,UAACzB,MAAD,EAASQ,QAAT,EAAsB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;AAD+B,UAEvBG,KAFuB,GAEYH,QAFZ,CAEvBG,KAFuB;AAAA,UAEhBC,KAFgB,GAEYJ,QAFZ,CAEhBI,KAFgB;AAAA,UAETC,KAFS,GAEYL,QAFZ,CAETK,KAFS;AAAA,UAEFC,IAFE,GAEYN,QAFZ,CAEFM,IAFE;AAAA,UAEII,GAFJ,GAEYV,QAFZ,CAEIU,GAFJ;AAG/B,UAAMH,KAAK,GAAG;AACZW,QAAAA,KAAK,EAAE,CADK;AAEZd,QAAAA,KAAK,EAAE,MAAKb,KAAL,CAAWE,MAAX,CAAkBe,IAAlB,CAAuB,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACN,IAAF,KAAWT,KAAf;AAAA,SAAxB,CAFK;AAGZM,QAAAA,GAAG,EAAHA,GAHY;AAIZP,QAAAA,KAAK,EAALA,KAJY;AAKZW,QAAAA,eAAe,EAAER,IALL;AAMZS,QAAAA,aAAa,EAAEV;AANH,OAAd;AAQAb,MAAAA,MAAM;AAAKe,QAAAA,KAAK,EAALA;AAAL,SAAef,MAAf,CAAN;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,MAAtB;;AACA,YAAKwB,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAED4B,Y,GAAe,UAAAb,KAAK,EAAI;AACtB,UAAMf,MAAM,GAAG,MAAKD,KAAL,CAAWC,MAAX,CAAkB6B,MAAlB,CAAyB,UAAAZ,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,KAAUH,KAAK,CAACG,GAApB;AAAA,OAA1B,CAAf;;AACA,YAAKM,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAED8B,W,GAAc,UAAAf,KAAK,EAAI;AACrB,UAAMf,MAAM,sBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ;;AACA,UAAMmB,KAAK,GAAGnB,MAAM,CAACoB,OAAP,CAAeL,KAAf,CAAd;AACAf,MAAAA,MAAM,CAACmB,KAAD,CAAN,qBAAqBJ,KAArB;AACAf,MAAAA,MAAM,CAACmB,KAAD,CAAN,CAAcO,KAAd,GAAsB,CAAC1B,MAAM,CAACmB,KAAD,CAAN,CAAcO,KAArC;;AACA,YAAKF,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAED+B,gB,GAAmB,UAAAC,IAAI,EAAI;AACzB,YAAKR,QAAL,CAAc;AAAErB,QAAAA,WAAW,EAAE6B;AAAf,OAAd;AACD,K;;UAEDC,iB,GAAoB,UAAArB,KAAK,EAAI;AAC3B,YAAKY,QAAL,CAAc;AAAEU,QAAAA,aAAa,EAAEtB,KAAjB;AAAwBT,QAAAA,WAAW,EAAE;AAArC,OAAd;AACD,K;;UAEDgC,U,GAAa,UAAA/B,UAAU,EAAI;AACzB,YAAKoB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD,K;;UAEDgC,Y,GAAe,YAAM;AAAA,wBAOf,MAAKrC,KAPU;AAAA,UAEjBG,QAFiB,eAEjBA,QAFiB;AAAA,UAGjBC,WAHiB,eAGjBA,WAHiB;AAAA,UAITkC,SAJS,eAIjBrC,MAJiB;AAAA,UAKjBkC,aALiB,eAKjBA,aALiB;AAAA,UAMjB9B,UANiB,eAMjBA,UANiB;AAQnB,UAAMkC,QAAQ,GACZJ,aAAa,IAAIA,aAAa,CAAChB,GAA/B,GACImB,SAAS,CAACR,MAAV,CAAiB,UAAAZ,CAAC;AAAA,eAAIA,CAAC,CAACL,KAAF,CAAQM,GAAR,KAAgBgB,aAAa,CAAChB,GAAlC;AAAA,OAAlB,CADJ,GAEImB,SAHN;;AAIA,UAAME,MAAM,GAAG1C,CAAC,CAAC2C,OAAF,CAAUF,QAAV,EAAoB,CAAClC,UAAU,CAACC,IAAZ,CAApB,EAAuC,CAACD,UAAU,CAACE,KAAZ,CAAvC,CAAf;;AACA,UAAMN,MAAM,GAAGN,QAAQ,CAAC6C,MAAD,EAASpC,WAAT,EAAsBD,QAAtB,CAAvB;AACA,aAAO;AAAEuC,QAAAA,UAAU,EAAEH,QAAQ,CAACI,MAAvB;AAA+BC,QAAAA,IAAI,EAAE3C;AAArC,OAAP;AACD,K;;;;;;;wCArFmB;AAClB,UAAMC,MAAM,IAAI;AAAEiB,QAAAA,GAAG,EAAE,EAAP;AAAWG,QAAAA,IAAI,EAAE;AAAjB,OAAJ,4BAAuCzB,SAAS,EAAhD,EAAZ;AACA,UAAMI,MAAM,GAAGR,SAAS,EAAxB;AAFkB,UAGHoD,QAHG,GAGU,KAAKC,KAAL,CAAWC,QAHrB,CAGV/C,KAHU;AAIlBU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBkC,QAArB;;AACA,UAAIA,QAAJ,EAAc;AAAA,YACJ7B,KADI,GACM6B,QADN,CACJ7B,KADI;AAEZN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,KAAK,CAACG,GAA9B;AACA,YAAIH,KAAK,CAACG,GAAN,KAAc,KAAlB,EAAyB,KAAKO,QAAL,CAAczB,MAAd,EAAsBe,KAAtB,EAAzB,KACK;AACH,eAAKR,WAAL,CAAiBP,MAAjB,EAAyBe,KAAzB;AACD;AACF,OAPD,MAOO,KAAKS,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAANA;AAAF,OAAd;;AACP,WAAKwB,QAAL,CAAc;AAAEvB,QAAAA,MAAM,EAANA,MAAF;AAAUiC,QAAAA,aAAa,EAAEjC,MAAM,CAAC,CAAD;AAA/B,OAAd;AACD;;;6BAyEQ;AAAA,UACS8C,KADT,GACmB,KAAKhD,KAAL,CAAWC,MAD9B,CACC0C,MADD;AAAA,yBAQH,KAAK3C,KARF;AAAA,UAGLG,QAHK,gBAGLA,QAHK;AAAA,UAILC,WAJK,gBAILA,WAJK;AAAA,UAKLF,MALK,gBAKLA,MALK;AAAA,UAMLiC,aANK,gBAMLA,aANK;AAAA,UAOL9B,UAPK,gBAOLA,UAPK;AAUP,UAAI,CAAC2C,KAAL,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;;AAVL,+BAW8B,KAAKX,YAAL,EAX9B;AAAA,UAWCK,UAXD,sBAWCA,UAXD;AAAA,UAWmBzC,MAXnB,sBAWa2C,IAXb;;AAYP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE1C,MADT;AAEE,QAAA,YAAY,EAAEiC,aAFhB;AAGE,QAAA,YAAY,EAAE,KAAKD,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAQE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaQ,UAAb,4BADF,EAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAE,KAAKb,YADjB;AAEE,QAAA,OAAO,EAAE,KAAKE,WAFhB;AAGE,QAAA,MAAM,EAAE,KAAKK,UAHf;AAIE,QAAA,UAAU,EAAE/B,UAJd;AAKE,QAAA,MAAM,EAAEJ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,UAAD;AACE,QAAA,UAAU,EAAEyC,UADd;AAEE,QAAA,QAAQ,EAAEvC,QAFZ;AAGE,QAAA,WAAW,EAAEC,WAHf;AAIE,QAAA,YAAY,EAAE,KAAK4B,gBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAFF,CARF,CADF;AA6BD;;;;EAzIkBzC,S;;AA4IrB,eAAeQ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genre\" }, ...getGenres()];\n    const movies = getMovies();\n    const { state: locState } = this.props.location;\n    console.log(\"movie\", locState);\n    if (locState) {\n      const { movie } = locState;\n      console.log(\"movie id\", movie._id);\n      if (movie._id === \"new\") this.addMovie(movies, movie);\n      else {\n        this.updateMovie(movies, movie);\n      }\n    } else this.setState({ movies });\n    this.setState({ genres, selectedGenre: genres[0] });\n  }\n\n  updateMovie = (movies, movieNew) => {\n    console.log(\"movies\", movies);\n    const { title, genre, stock, rate } = movieNew;\n    const movie = movies.find(m => m._id === movieNew._id);\n    console.log(\"movie found\", movie, movieNew);\n    const index = movies.indexOf(movie);\n    movies[index].title = title;\n    movies[index].genre.name = genre;\n    movies[index].dailyRentalRate = rate;\n    movies[index].numberInStock = stock;\n    this.setState({ movies });\n  };\n\n  addMovie = (movies, movieNew) => {\n    console.log(\"add movie\", movieNew);\n    const { title, genre, stock, rate, _id } = movieNew;\n    const movie = {\n      liked: 0,\n      genre: this.state.genres.find(g => g.name === genre),\n      _id,\n      title,\n      dailyRentalRate: rate,\n      numberInStock: stock\n    };\n    movies = { movie, ...movies };\n    console.log(\"movies\", movies);\n    this.setState({ movies });\n  };\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLiked = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movie };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\n        : allMovies;\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      genres,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n\n    if (!count) return <h3>No movie in database</h3>;\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={genres}\n            selectedItem={selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <h3>Showing {totalCount} movies in the database</h3>\n          <main className=\"container\">\n            <MoviesTable\n              onDelete={this.handleDelete}\n              onLiked={this.handleLiked}\n              onSort={this.handleSort}\n              sortColumn={sortColumn}\n              movies={movies}\n            />\n            <Pagination\n              itemsCount={totalCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}