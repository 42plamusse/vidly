{"ast":null,"code":"import _objectSpread from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Famille/Code-lab/vidly/src/components/movieForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { Route } from \"react-router-dom\";\nimport NotFound from \"./notFound\";\n\nvar MovieForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(MovieForm, _Form);\n\n  function MovieForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        _id: \"\",\n        title: \"\",\n        genre: \"\",\n        stock: \"\",\n        rate: \"\"\n      },\n      _id: \"\",\n      genres: getGenres(),\n      errors: {}\n    };\n\n    _this.checkPath = function () {};\n\n    _this.schema = {\n      title: Joi.string().required().label(\"Title\"),\n      genre: Joi.string().required().label(\"Genre\"),\n      stock: Joi.number().required().integer().min(0).max(100).label(\"Number in Stock\"),\n      rate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    };\n\n    _this.doSubmit = function () {\n      console.log(\"Submitted\");\n\n      _this.props.history.push({\n        pathname: \"/movies\",\n        state: {\n          data: _objectSpread({}, _this.state.data),\n          _id: _this.state._id || \"new\"\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MovieForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      var movies = getMovies();\n\n      if (!movies.find(function (m) {\n        return m._id === movieId;\n      })) {\n        console.log(\"404\");\n        return React.createElement(Route, {\n          path: \"/not-found\",\n          component: NotFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }\n\n      var _getMovie = getMovie(movieId),\n          title = _getMovie.title,\n          genre = _getMovie.genre,\n          stock = _getMovie.numberInStock,\n          rate = _getMovie.dailyRentalRate;\n\n      var data = {\n        title: title,\n        genre: genre.name,\n        stock: stock,\n        rate: rate\n      };\n      this.setState({\n        data: data,\n        _id: movieId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          genres = _this$state.genres,\n          errors = _this$state.errors;\n      this.checkPath();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Movie Form\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderInput(\"title\", \"Title\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"genreSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: this.handleChange,\n        id: \"genreSelect\",\n        name: \"genre\",\n        value: data.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), genres.map(function (genre) {\n        return React.createElement(\"option\", {\n          key: genre._id,\n          value: genre.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, genre.name);\n      })), errors[\"genre\"] && React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, errors[\"genre\"])), this.renderInput(\"stock\", \"Number in Stock\", \"number\"), this.renderInput(\"rate\", \"Rate\"), this.renderButton(\"Save\")));\n    }\n  }]);\n\n  return MovieForm;\n}(Form);\n\nexport default MovieForm; // const MovieForm = ({ match, history }) => {\n// };\n// return (\n//   <div>\n//     <h1>Movie Form {match.params.id}</h1>\n//     <button\n//       className=\"btn btn-primary\"\n//       onClick={() => history.push(\"/movies\")}>\n//       Save\n//     </button>\n//   </div>\n// );","map":{"version":3,"sources":["/Users/Famille/Code-lab/vidly/src/components/movieForm.jsx"],"names":["React","Joi","Form","getMovie","getMovies","getGenres","Route","NotFound","MovieForm","state","data","_id","title","genre","stock","rate","genres","errors","checkPath","schema","string","required","label","number","integer","min","max","doSubmit","console","log","props","history","push","pathname","movieId","match","params","id","movies","find","m","numberInStock","dailyRentalRate","name","setState","handleSubmit","renderInput","handleChange","map","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { Route } from \"react-router-dom\";\nimport NotFound from \"./notFound\";\n\nclass MovieForm extends Form {\n  state = {\n    data: { _id: \"\", title: \"\", genre: \"\", stock: \"\", rate: \"\" },\n    _id: \"\",\n    genres: getGenres(),\n    errors: {}\n  };\n  checkPath = () => {\n    \n  }\n  componentDidMount() {\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n    const movies = getMovies();\n    if (!movies.find(m => m._id === movieId)) {\n      console.log(\"404\");\n      return <Route path=\"/not-found\" component={NotFound} />;\n    }\n    const {\n      title,\n      genre,\n      numberInStock: stock,\n      dailyRentalRate: rate\n    } = getMovie(movieId);\n    const data = { title, genre: genre.name, stock, rate };\n    this.setState({ data, _id: movieId });\n  }\n\n  schema = {\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genre: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    stock: Joi.number()\n      .required()\n      .integer()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    rate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  doSubmit = () => {\n    console.log(\"Submitted\");\n    this.props.history.push({\n      pathname: \"/movies\",\n      state: { data: { ...this.state.data }, _id: this.state._id || \"new\" }\n    });\n  };\n\n  render() {\n    const { data, genres, errors } = this.state;\n    this.checkPath();\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          <div className=\"form-group\">\n            <label htmlFor=\"genreSelect\">Genre</label>\n            <select\n              className=\"form-control\"\n              onChange={this.handleChange}\n              id=\"genreSelect\"\n              name=\"genre\"\n              value={data.genre}>\n              <option />\n              {genres.map(genre => (\n                <option key={genre._id} value={genre.name}>\n                  {genre.name}\n                </option>\n              ))}\n            </select>\n            {errors[\"genre\"] && (\n              <div className=\"alert alert-danger\">{errors[\"genre\"]}</div>\n            )}\n          </div>\n          {this.renderInput(\"stock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"rate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n\n// const MovieForm = ({ match, history }) => {\n\n// };\n\n// return (\n//   <div>\n//     <h1>Movie Form {match.params.id}</h1>\n//     <button\n//       className=\"btn btn-primary\"\n//       onClick={() => history.push(\"/movies\")}>\n//       Save\n//     </button>\n//   </div>\n// );\n"]},"metadata":{},"sourceType":"module"}