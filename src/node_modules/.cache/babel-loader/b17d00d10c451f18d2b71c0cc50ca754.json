{"ast":null,"code":"import _objectSpread from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Famille/Code-lab/vidly/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/navbarTop\";\nimport Movies from \"./components/movies\";\nimport * as MovieServices from \"./services/fakeMovieService\";\nimport \"./App.css\";\nimport Pagination from \"./components/common/pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport ListGroup from \"./components/common/listGroup\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport { filtering } from \"./utils/filtering\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: MovieServices.getMovies(),\n      genres: GenreServices.getGenres(),\n      pageSize: 4,\n      currentPage: 1,\n      currentGenre: 0\n    };\n\n    _this.handleDelete = function (movie) {\n      var movies = _this.state.movies.filter(function (m) {\n        return m._id !== movie._id;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handleLiked = function (movie) {\n      var movies = _toConsumableArray(_this.state.movies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movie);\n      movies[index].liked = !movies[index].liked;\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.getTotalPages = function (nbrMovies) {\n      var moviesPerPages = 4;\n      return Math.ceil(nbrMovies / moviesPerPages);\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreChange = function (genre) {\n      _this.setState({\n        currentGenre: _this.state.genres.indexOf(genre)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var nbrMovies = this.state.movies.length;\n      var _this$state = this.state,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          allMovies = _this$state.movies,\n          genres = _this$state.genres,\n          currentGenre = _this$state.currentGenre;\n\n      var filteredMovies = _toConsumableArray(allMovies);\n\n      if (currentGenre) filteredMovies = filtering(allMovies, genres);\n      var movies = paginate(filteredMovies, currentPage, pageSize);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        nbrMovies: nbrMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(ListGroup, {\n        items: genres,\n        currentItem: currentGenre,\n        onItemChange: this.handleGenreChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, nbrMovies ? React.createElement(Movies, {\n        onDelete: this.handleDelete,\n        onLiked: this.handleLiked,\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : \"\", React.createElement(Pagination, {\n        itemsCount: nbrMovies,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Famille/Code-lab/vidly/src/App.js"],"names":["React","Component","Navbar","Movies","MovieServices","Pagination","paginate","ListGroup","getGenres","filtering","App","state","movies","getMovies","genres","GenreServices","pageSize","currentPage","currentGenre","handleDelete","movie","filter","m","_id","setState","handleLiked","index","indexOf","liked","getTotalPages","nbrMovies","moviesPerPages","Math","ceil","handlePageChange","page","handleGenreChange","genre","length","allMovies","filteredMovies"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./components/navbarTop\";\nimport Movies from \"./components/movies\";\nimport * as MovieServices from \"./services/fakeMovieService\";\nimport \"./App.css\";\nimport Pagination from \"./components/common/pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport ListGroup from \"./components/common/listGroup\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport { filtering } from \"./utils/filtering\";\n\nclass App extends Component {\n  state = {\n    movies: MovieServices.getMovies(),\n    genres: GenreServices.getGenres(),\n    pageSize: 4,\n    currentPage: 1,\n    currentGenre: 0\n  };\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLiked = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movie };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  getTotalPages = nbrMovies => {\n    const moviesPerPages = 4;\n    return Math.ceil(nbrMovies / moviesPerPages);\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreChange = genre => {\n    this.setState({ currentGenre: this.state.genres.indexOf(genre) });\n  };\n\n  render() {\n    const nbrMovies = this.state.movies.length;\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      genres,\n      currentGenre\n    } = this.state;\n    let filteredMovies = [...allMovies];\n    if (currentGenre) filteredMovies = filtering(allMovies, genres);\n    const movies = paginate(filteredMovies, currentPage, pageSize);\n    return (\n      <React.Fragment>\n        <Navbar nbrMovies={nbrMovies} />\n        <ListGroup\n          items={genres}\n          currentItem={currentGenre}\n          onItemChange={this.handleGenreChange}\n        />\n        <main className=\"container\">\n          {nbrMovies ? (\n            <Movies\n              onDelete={this.handleDelete}\n              onLiked={this.handleLiked}\n              movies={movies}\n            />\n          ) : (\n            \"\"\n          )}\n          <Pagination\n            itemsCount={nbrMovies}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}