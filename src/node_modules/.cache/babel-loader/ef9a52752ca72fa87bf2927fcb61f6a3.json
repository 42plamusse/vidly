{"ast":null,"code":"import _classCallCheck from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Famille/Code-lab/vidly/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Famille/Code-lab/vidly/src/components/movieForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nvar MovieForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(MovieForm, _Form);\n\n  function MovieForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      _id: \"\",\n      genres: [],\n      errors: {}\n    };\n    _this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreId: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().required().integer().min(0).max(100).label(\"Number in Stock\"),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    };\n\n    _this.mapToViewModel = function (movie) {\n      return {\n        title: movie.title,\n        genreId: movie.genre._id,\n        numberInStock: movie.numberInStock,\n        dailyRentalRate: movie.dailyRentalRate\n      };\n    };\n\n    _this.doSubmit = function () {\n      console.log(\"Submitted\");\n      var _this$state = _this.state,\n          data = _this$state.data,\n          _id = _this$state._id,\n          genres = _this$state.genres;\n      data[\"_id\"] = _id;\n      data[\"genre\"] = genres.find(function (g) {\n        return g._id === data.genreId;\n      });\n\n      _this.props.history.push({\n        pathname: \"/movies\",\n        state: {\n          movie: data\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MovieForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = getGenres();\n      this.setState({\n        genres: genres\n      });\n      var movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      var movie = getMovie(movieId);\n      if (!movie) return this.props.history.replace(\"/not-found\");\n      this.setState({\n        _id: movieId\n      });\n\n      var _getMovie = getMovie(movieId),\n          title = _getMovie.title,\n          genre = _getMovie.genre,\n          numberInStock = _getMovie.numberInStock,\n          dailyRentalRate = _getMovie.dailyRentalRate;\n\n      var data = {\n        title: title,\n        genreId: genre._id,\n        numberInStock: numberInStock,\n        dailyRentalRate: dailyRentalRate\n      };\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          genres = _this$state2.genres,\n          errors = _this$state2.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Movie Form\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderInput(\"title\", \"Title\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"genreSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: this.handleChange,\n        id: \"genreSelect\",\n        name: \"genre\",\n        value: data.genreId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), genres.map(function (genre) {\n        return React.createElement(\"option\", {\n          key: genre._id,\n          value: genre.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, genre.name);\n      })), errors[\"genre\"] && React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, errors[\"genre\"])), this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\"), this.renderButton(\"Save\")));\n    }\n  }]);\n\n  return MovieForm;\n}(Form);\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/Famille/Code-lab/vidly/src/components/movieForm.jsx"],"names":["React","Joi","Form","getMovie","getMovies","getGenres","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","_id","genres","errors","schema","string","required","label","number","integer","min","max","mapToViewModel","movie","genre","doSubmit","console","log","find","g","props","history","push","pathname","setState","movieId","match","params","id","replace","handleSubmit","renderInput","handleChange","map","name","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    _id: \"\",\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .integer()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({ genres });\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n\n    this.setState({ _id: movieId });\n    const { title, genre, numberInStock, dailyRentalRate } = getMovie(movieId);\n    const data = { title, genreId: genre._id, numberInStock, dailyRentalRate };\n    this.setState({ data });\n  }\n\n  mapToViewModel = movie => {\n    return {\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  };\n\n  doSubmit = () => {\n    console.log(\"Submitted\");\n    const { data, _id, genres } = this.state;\n    data[\"_id\"] = _id;\n    data[\"genre\"] = genres.find(g => g._id === data.genreId);\n    this.props.history.push({\n      pathname: \"/movies\",\n      state: { movie: data }\n    });\n  };\n\n  render() {\n    const { data, genres, errors } = this.state;\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          <div className=\"form-group\">\n            <label htmlFor=\"genreSelect\">Genre</label>\n            <select\n              className=\"form-control\"\n              onChange={this.handleChange}\n              id=\"genreSelect\"\n              name=\"genre\"\n              value={data.genreId}>\n              <option />\n              {genres.map(genre => (\n                <option key={genre._id} value={genre.name}>\n                  {genre.name}\n                </option>\n              ))}\n            </select>\n            {errors[\"genre\"] && (\n              <div className=\"alert alert-danger\">{errors[\"genre\"]}</div>\n            )}\n          </div>\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}